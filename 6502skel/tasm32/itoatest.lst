0001   0000             ;
0002   0000             ; To assembly this, either use the zxasm.bat file:
0003   0000             ;
0004   0000             ; zxasm hello
0005   0000             ;
0006   0000             ; or... assemble with the following options:
0007   0000             ;
0008   0000             ; tasm -80 -b -s hello.asm hello.p
0009   0000             ;
0010   0000             ;==============================================
0011   0000             ;    ZX81 assembler 'Hello World' 
0012   0000             ;==============================================
0013   0000             ;
0014   0000             ;defs
0015   0000             #include "zx81defs.asm"
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0016   0000             ;EQUs for ROM routines
0017   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0006+  0000             DISPLAY_5		EQU $02B5
0007+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0008+  0000             							; so we'll skip past that and set BC ourselves
0009+  0000             CLS				EQU $0A2A
0010+  0000             KSCAN           EQU $02BB 
0011+  0000             FINDCHR         EQU $07BD
0012+  0000             COPY            EQU $0869
0013+  0000             FAST            EQU $0F23
0014+  0000             SLOW            EQU $0F2B
0015+  0000             SLOWORFAST		EQU $0207
0016+  0000             ;sys vars
0017+  0000             ERR_NR			EQU $40000018   0000             ;ZX81 char codes/how to survive without ASCII
0019   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters.
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0020   0000             ;system variables
0021   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393
0003+  0000             
0004+  4009                             ORG 16393
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C C9 40       D_FILE:         DEFW Display
0010+  400E CA 40       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 E2 43       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 E3 43       E_LINE:         DEFW BasicEnd 
0014+  4016 E7 43       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A E8 43       STKBOT:         DEFW BasicEnd+5
0017+  401C E8 43       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 B7 40       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0022   407D             
0023   407D             ;the standard REM statement that will contain our 'hex' code
0024   407D             #include "line1.asm"
0001+  407D             ;Line 1
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F 36 00                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0025   4082             
0026   4082             ;------------------------------------------------------------
0027   4082             ; code starts here and gets added to the end of the REM 
0028   4082             ;------------------------------------------------------------
0029   4082             
0030   4082             ;back to BASIC	
0031   4082             ;converts text in a buffer to an integer
0032   4082             ;this function takes the address of the rightmost
0033   4082             ;hl address of rightmost byte
0034   4082             ;c number of bytes in the buffer
0035   4082             ;result is returned in bc
0036   4082             main:
0037   4082 2A 0C 40        ld hl, (D_FILE)
0038   4085 01 05 00        ld bc, 5
0039   4088 09              add hl, bc
0040   4089 3E 00           ld a, 0
0041   408B CD 91 40        call  itoa; should convert to $09
0042   408E C3 82 40        jp main
0043   4091                 
0044   4091             ;this subroutine will convert a number in 'a' to a chars
0045   4091             ;a - the number to convert
0046   4091             ;hl - the result will be placed in memory at the destination address (right justified)
0047   4091             itoa:
0048   4091                 ;push af
0049   4091 4F              ld c, a
0050   4092 16 0A           ld d, 10
0051   4094 CD A5 40        call C_Div_D ; puts remainder in a
0052   4097                 
0053   4097                 ;convert a to a char code
0054   4097 5F              ld e, a; save quotient
0055   4098 C5              push bc ; save quotient
0056   4099 C6 1C           add a, $1c ; convert remainder to a char code
0057   409B 77              ld (hl), a ; store char
0058   409C 2B              dec hl
0059   409D                 
0060   409D C1              pop bc  ; retore queotient  
0061   409E 79              ld a, c
0062   409F FE 00           cp 0 ;if a is 0, well are done
0063   40A1 C2 91 40        jp nz, itoa
0064   40A4 C9              ret
0065   40A5                 
0066   40A5              
0067   40A5             ;this code taken from http://z80-heaven.wikidot.com/math#toc39    
0068   40A5             C_Div_D:
0069   40A5             ;Inputs:
0070   40A5             ;     C is the numerator
0071   40A5             ;     D is the denominator
0072   40A5             ;Outputs:
0073   40A5             ;     A is the remainder
0074   40A5             ;     B is 0
0075   40A5             ;     C is the result of C/D
0076   40A5             ;     D,E,H,L are not changed
0077   40A5             ;
0078   40A5 06 08           ld b,8
0079   40A7 AF              xor a
0080   40A8 CB 21           sla c
0081   40AA 17              rla
0082   40AB BA              cp d
0083   40AC 38 02           jr c,$+4
0084   40AE 0C              inc c
0085   40AF 92              sub d
0086   40B0 10 F6           djnz $-8
0087   40B2 C9              ret
0088   40B3             
0089   40B3              ;include our variables
0090   40B3             ;#include "vars.asm"
0091   40B3             buffer:
0092   40B3 1D 1C 1F        DEFB $1D, $1C, $1F ; "103"
0093   40B6             
0094   40B6             ; ===========================================================
0095   40B6             ; code ends
0096   40B6             ; ===========================================================
0097   40B6             ;end the REM line and put in the RAND USR line to call our 'hex code'
0098   40B6             #include "line2.asm"
0001+  40B6             ;this is the end of line 1 - the REM			
0002+  40B6 76          				DEFB $76                        ; Newline				
0003+  40B7             ;followed by the the RAND USR line				
0004+  40B7             Line1End       
0005+  40B7 00 0A       Line2			DEFB $00,$0a
0006+  40B9 0E 00                       DEFW Line2End-Line2Text
0007+  40BB F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  40BD 1D 22 21 1D 				DEFB $1D,$22,$21,$1D,$20        ; 16514                
0008+  40C1 20 
0009+  40C2 7E                          DEFB $7E                        ; Number
0010+  40C3 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  40C7 00 
0011+  40C8 76                          DEFB $76                        ; Newline
0012+  40C9             Line2End 
0099   40C9             
0100   40C9             ;display file defintion
0101   40C9             #include "screen.asm"               
0001+  40C9             ;ZX81 screens
0002+  40C9             ; Display file (ZX81 screen) - low res screen
0003+  40C9 76          Display        	DEFB $76     
0004+  40CA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 0
0004+  40CE 00 00 00 00 
0004+  40D2 00 00 00 00 
0004+  40D6 00 00 00 00 
0004+  40DA 00 00 00 00 
0004+  40DE 00 00 00 00 
0004+  40E2 00 00 00 00 
0004+  40E6 00 00 00 00 
0004+  40EA 76 
0005+  40EB 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 1
0005+  40EF 00 00 00 00 
0005+  40F3 00 00 00 00 
0005+  40F7 00 00 00 00 
0005+  40FB 00 00 00 00 
0005+  40FF 00 00 00 00 
0005+  4103 00 00 00 00 
0005+  4107 00 00 00 00 
0005+  410B 76 
0006+  410C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 2
0006+  4110 00 00 00 00 
0006+  4114 00 00 00 00 
0006+  4118 00 00 00 00 
0006+  411C 00 00 00 00 
0006+  4120 00 00 00 00 
0006+  4124 00 00 00 00 
0006+  4128 00 00 00 00 
0006+  412C 76 
0007+  412D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 3
0007+  4131 00 00 00 00 
0007+  4135 00 00 00 00 
0007+  4139 00 00 00 00 
0007+  413D 00 00 00 00 
0007+  4141 00 00 00 00 
0007+  4145 00 00 00 00 
0007+  4149 00 00 00 00 
0007+  414D 76 
0008+  414E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 4
0008+  4152 00 00 00 00 
0008+  4156 00 00 00 00 
0008+  415A 00 00 00 00 
0008+  415E 00 00 00 00 
0008+  4162 00 00 00 00 
0008+  4166 00 00 00 00 
0008+  416A 00 00 00 00 
0008+  416E 76 
0009+  416F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 5
0009+  4173 00 00 00 00 
0009+  4177 00 00 00 00 
0009+  417B 00 00 00 00 
0009+  417F 00 00 00 00 
0009+  4183 00 00 00 00 
0009+  4187 00 00 00 00 
0009+  418B 00 00 00 00 
0009+  418F 76 
0010+  4190 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 6
0010+  4194 00 00 00 00 
0010+  4198 00 00 00 00 
0010+  419C 00 00 00 00 
0010+  41A0 00 00 00 00 
0010+  41A4 00 00 00 00 
0010+  41A8 00 00 00 00 
0010+  41AC 00 00 00 00 
0010+  41B0 76 
0011+  41B1 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 7
0011+  41B5 00 00 00 00 
0011+  41B9 00 00 00 00 
0011+  41BD 00 00 00 00 
0011+  41C1 00 00 00 00 
0011+  41C5 00 00 00 00 
0011+  41C9 00 00 00 00 
0011+  41CD 00 00 00 00 
0011+  41D1 76 
0012+  41D2 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 8
0012+  41D6 00 00 00 00 
0012+  41DA 00 00 00 00 
0012+  41DE 00 00 00 00 
0012+  41E2 00 00 00 00 
0012+  41E6 00 00 00 00 
0012+  41EA 00 00 00 00 
0012+  41EE 00 00 00 00 
0012+  41F2 76 
0013+  41F3 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 9
0013+  41F7 00 00 00 00 
0013+  41FB 00 00 00 00 
0013+  41FF 00 00 00 00 
0013+  4203 00 00 00 00 
0013+  4207 00 00 00 00 
0013+  420B 00 00 00 00 
0013+  420F 00 00 00 00 
0013+  4213 76 
0014+  4214 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 10
0014+  4218 00 00 00 00 
0014+  421C 00 00 00 00 
0014+  4220 00 00 00 00 
0014+  4224 00 00 00 00 
0014+  4228 00 00 00 00 
0014+  422C 00 00 00 00 
0014+  4230 00 00 00 00 
0014+  4234 76 
0015+  4235 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 11
0015+  4239 00 00 00 00 
0015+  423D 00 00 00 00 
0015+  4241 00 00 00 00 
0015+  4245 00 00 00 00 
0015+  4249 00 00 00 00 
0015+  424D 00 00 00 00 
0015+  4251 00 00 00 00 
0015+  4255 76 
0016+  4256 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 12
0016+  425A 00 00 00 00 
0016+  425E 00 00 00 00 
0016+  4262 00 00 00 00 
0016+  4266 00 00 00 00 
0016+  426A 00 00 00 00 
0016+  426E 00 00 00 00 
0016+  4272 00 00 00 00 
0016+  4276 76 
0017+  4277 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 13
0017+  427B 00 00 00 00 
0017+  427F 00 00 00 00 
0017+  4283 00 00 00 00 
0017+  4287 00 00 00 00 
0017+  428B 00 00 00 00 
0017+  428F 00 00 00 00 
0017+  4293 00 00 00 00 
0017+  4297 76 
0018+  4298 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 14
0018+  429C 00 00 00 00 
0018+  42A0 00 00 00 00 
0018+  42A4 00 00 00 00 
0018+  42A8 00 00 00 00 
0018+  42AC 00 00 00 00 
0018+  42B0 00 00 00 00 
0018+  42B4 00 00 00 00 
0018+  42B8 76 
0019+  42B9 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 15
0019+  42BD 00 00 00 00 
0019+  42C1 00 00 00 00 
0019+  42C5 00 00 00 00 
0019+  42C9 00 00 00 00 
0019+  42CD 00 00 00 00 
0019+  42D1 00 00 00 00 
0019+  42D5 00 00 00 00 
0019+  42D9 76 
0020+  42DA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 16
0020+  42DE 00 00 00 00 
0020+  42E2 00 00 00 00 
0020+  42E6 00 00 00 00 
0020+  42EA 00 00 00 00 
0020+  42EE 00 00 00 00 
0020+  42F2 00 00 00 00 
0020+  42F6 00 00 00 00 
0020+  42FA 76 
0021+  42FB 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 17
0021+  42FF 00 00 00 00 
0021+  4303 00 00 00 00 
0021+  4307 00 00 00 00 
0021+  430B 00 00 00 00 
0021+  430F 00 00 00 00 
0021+  4313 00 00 00 00 
0021+  4317 00 00 00 00 
0021+  431B 76 
0022+  431C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 18
0022+  4320 00 00 00 00 
0022+  4324 00 00 00 00 
0022+  4328 00 00 00 00 
0022+  432C 00 00 00 00 
0022+  4330 00 00 00 00 
0022+  4334 00 00 00 00 
0022+  4338 00 00 00 00 
0022+  433C 76 
0023+  433D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 19
0023+  4341 00 00 00 00 
0023+  4345 00 00 00 00 
0023+  4349 00 00 00 00 
0023+  434D 00 00 00 00 
0023+  4351 00 00 00 00 
0023+  4355 00 00 00 00 
0023+  4359 00 00 00 00 
0023+  435D 76 
0024+  435E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 20
0024+  4362 00 00 00 00 
0024+  4366 00 00 00 00 
0024+  436A 00 00 00 00 
0024+  436E 00 00 00 00 
0024+  4372 00 00 00 00 
0024+  4376 00 00 00 00 
0024+  437A 00 00 00 00 
0024+  437E 76 
0025+  437F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 21
0025+  4383 00 00 00 00 
0025+  4387 00 00 00 00 
0025+  438B 00 00 00 00 
0025+  438F 00 00 00 00 
0025+  4393 00 00 00 00 
0025+  4397 00 00 00 00 
0025+  439B 00 00 00 00 
0025+  439F 76 
0026+  43A0 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 22
0026+  43A4 00 00 00 00 
0026+  43A8 00 00 00 00 
0026+  43AC 00 00 00 00 
0026+  43B0 00 00 00 00 
0026+  43B4 00 00 00 00 
0026+  43B8 00 00 00 00 
0026+  43BC 00 00 00 00 
0026+  43C0 76 
0027+  43C1 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 23
0027+  43C5 00 00 00 00 
0027+  43C9 00 00 00 00 
0027+  43CD 00 00 00 00 
0027+  43D1 00 00 00 00 
0027+  43D5 00 00 00 00 
0027+  43D9 00 00 00 00 
0027+  43DD 00 00 00 00 
0027+  43E1 76 
0028+  43E2             
0102   43E2             
0103   43E2             ;close out the basic program
0104   43E2             #include "endbasic.asm"0001+  43E2             ; close out the BASIC program structure
0002+  43E2             ; BASIC Variables area
0003+  43E2             Variables:      
0004+  43E2 80          VariablesEnd:   DEFB $80
0005+  43E3             BasicEnd:                              
0006+  43E3             
0007+  43E3             
0008+  43E3             #END
tasm: Number of errors = 0
